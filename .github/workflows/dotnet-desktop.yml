name: Build and Release LlamaServer

on:
  push:
    tags:
      - '*'  # Trigger on any tag push

jobs:
  build:
    name: Build and Release LlamaServer Executable
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  # Ensure .NET 8.0 is installed

      - name: Restore Dependencies
        run: dotnet restore LlamaServer.sln

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Find Visual Studio Path
        run: |
          $vsPath = &"C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
          echo "VS_PATH=$vsPath" >> $env:GITHUB_ENV

      - name: Build Installer
        run: |
          &"$env:VS_PATH\Common7\IDE\devenv.com" LlamaServer.sln /Project LlamaServer_Installer/LlamaServer_Installer.vdproj /Build "Release"

      - name: Archive Build Artifact
        run: Compress-Archive -Path LlamaServer\bin\Release\net8.0\* -DestinationPath LlamaServer-${{ github.ref_name }}-win-x64.zip

      - name: Rename MSI File for Release
        run: |
          mkdir release
          mv LlamaServer_Installer\Release\*.msi release/LlamaServer-${{ github.ref_name }}-win-x64.msi

      - name: Upload MSI Artifact (v4)
        uses: actions/upload-artifact@v4
        with:
          path: release/LlamaServer-${{ github.ref_name }}-win-x64.msi
          compression-level: 0  # No compression for fastest uploads

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release/LlamaServer-${{ github.ref_name }}-win-x64.msi
          tag_name: ${{ github.ref_name }}
          release_name: LlamaServer ${{ github.ref_name }}
          body: "Automated release for LlamaServer version ${{ github.ref_name }} win-x64"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}