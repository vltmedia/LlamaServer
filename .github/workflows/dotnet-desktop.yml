name: Build and Release LlamaServer

on:
  push:
    tags:
      - '*'  # Trigger on any tag push

jobs:
  build:
    name: Build and Release LlamaServer Executable
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  # Ensure .NET 8.0 is installed

      - name: Restore Dependencies
        run: dotnet restore LlamaServer.sln

      - name: Remove Conflicting DLLs Before Build
        run: |
          rm -rf $HOME/.nuget/packages/llamasharp.backend.cpu/*/runtimes/win-x64/native/avx
          rm -rf $HOME/.nuget/packages/llamasharp.backend.cpu/*/runtimes/win-x64/native/avx512
          rm -rf $HOME/.nuget/packages/llamasharp.backend.cpu/*/runtimes/win-x64/native/noavx
          echo "Removed conflicting CPU backend DLLs"


      - name: Build Project
        run: dotnet publish LlamaServer/LlamaServer.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:EnableCompressionInSingleFile=true -p:PublishTrimmed=true -o build

      - name: Archive Build Artifact
        run: Compress-Archive -Path build/* -DestinationPath LlamaServer-${{ github.ref_name }}.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: LlamaServer-${{ github.ref_name }}.zip
          tag_name: ${{ github.ref_name }}
          release_name: LlamaServer ${{ github.ref_name }}
          body: "Automated release for LlamaServer version ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
